# ==================================================================

# Change these as required:

# Version to be released
VERSION=1.3.3

# Date to put in documentation for the release date of this release
VERSION_DATE=`date "+%d %b %Y"`

#Base Directory (On Local PC):
BASEDIR=`bash basedir.sh`

# Location of Pmw source files (On Local PC):
SRC_DIR=Pmw_0_0_0

# ==================================================================


DIR=`echo ${VERSION} | tr . _`
cd ${BASEDIR}/Pmw

# Check that change file ends with "Release of version $VERSION"
tail ${SRC_DIR}/docsrc/text/changes_text.py

# In the home page:
#   - change the version number to $VERSION
#   - update the date to $VERSION_DATE
vi ${SRC_DIR}/docsrc/text/root_index.html

# Make sure porting document contains changes since last release
vi ${SRC_DIR}/docsrc/text/porting_text.py

# Chmod all files 664. Use this to check
# Also: umask 002
ls -lR | sort -u > /tmp/foosh
vi /tmp/foosh

# Check cvs for any unknown files or files not checked in:
export CVS_RSH=ssh
cvs -z9 -nq update -I \! -I CVS -I "*.pyc"

# Tag the release
cvs -z9 tag V$DIR

cd ${BASEDIR}

VERSION=${VERSION} SRC_DIR=${SRC_DIR} \
  DIR=${DIR} VERSION_DATE=${VERSION_DATE} sh Pmw/maketar.sh

# Make sure there are no unexpected files displayed by maketar.sh

# Check tests, demos and documentation:
cd /tmp/Pmw/Pmw_${DIR}/tests
#python All.py
cd /tmp/Pmw/Pmw_${DIR}/demos
#python All.py
#firefox /tmp/Pmw/Pmw_${DIR}/doc/index.html

# Also run tests and demos for older versions of python, eg:
#cd /tmp/Pmw/Pmw_${DIR}/tests
#python2.1 All.py
#cd /tmp/Pmw/Pmw_${DIR}/demos
#python2.1 All.py

# Ftp distribution to incoming on SourceForge:
sftp adyh,pmw@frs.sourceforge.net
cd /home/frs/project/pmw/Pmw
mkdir Pmw.$VERSION
cd Pmw.$VERSION
put Pmw.$VERSION.tar.gz

# Move distribution to Pmw download page via Pmw project page:
# First login as administrator, then
#http://sourceforge.net/projects/pmw
#-> Admin
#-> Edit/Release Files
#-> Add Release (for Package Name "Pmw")
#enter into "New release name" field: $VERSION
#click "Create This Release"
#paste top of docsrc/Pmw.announce into "Paste The Notes In:" box
#select "Preserve my pre-formatted text" box
#click on "Submit/Refresh"
#select Pmw.$VERSION.tar.gz
#select Pmw.$VERSION.docsrc.tar.gz
#click on "Add Files and/or Refresh View"
#for Pmw.$VERSION.tar.gz:
#    from "Processor" combobox select "Any"
#    from "File Type" combobox select ".gz"
#    click on "Update/Refresh"
#for Pmw.$VERSION.docsrc.tar.gz:
#    from "Processor" combobox select "Any"
#    from "File Type" combobox select ".gz"
#    click on "Update/Refresh"
#select "I'm sure" in Step 4
#click on "Send Notice"

# Copy home page to SourceForge
cd ${BASEDIR}/Pmw/${SRC_DIR}/docsrc/text
scp root_index.html adyh@web.sourceforge.net:/home/project-web/pmw/htdocs

# Copy all documentation to home page
cd /tmp
scp Pmw.$VERSION.tar.gz adyh@web.sourceforge.net:/home/project-web/pmw/htdocs

#ssh pmw.sourceforge.net
#  umask 002
#  # set VERSION as ABOVE
#  DIR=`echo ${VERSION} | tr . _`
#  cd /home/groups/p/pm/pmw/htdocs
#  gzip -dc Pmw.${VERSION}.tar.gz | tar xf - 
#  rm -rf doc
#  mv Pmw/Pmw_${DIR}/doc doc
#  rm -rf Pmw
#  rm -rf Pmw.${VERSION}.tar.gz
#  mv root_index.html index.html
#  exit

# mozilla http://pmw.sourceforge.net/

# After 30 minutes so that mirrors are updated, test release
http://sourceforge.net/projects/pmw
-> Download
download Pmw.$VERSION.tar.gz to /tmp
unpack and run tests

# Sleep on it, then ...

# Add news item to sourceforge
  http://sourceforge.net/projects/pmw
  -> Submit News

Post docsrc/Pmw.announce about new release on:
    python-announce-list@python.org
    python-list@python.org
    pmw-general@lists.sourceforge.net
